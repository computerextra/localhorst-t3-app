generator client {
  provider        = "prisma-client-js"
  output          = "./generated/CMS"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("CMS_URL")
}

model Abteilung {
  id          String        @id
  name        String
  Mitarbeiter Mitarbeiter[]
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Angebot {
  id         String   @id
  title      String
  subtitle   String?
  date_start DateTime
  date_stop  DateTime
  link       String
  image      String
  anzeigen   Boolean?
}

model Dokumente {
  id            String   @id
  filename      String
  extension     String
  date_modified DateTime
  data          String
  downloads     Int      @default(0)
}

model Jobs {
  id     String  @id
  name   String
  online Boolean
}

model Mitarbeiter {
  id          String    @id
  name        String
  short       String
  image       Boolean
  sex         String
  tags        String
  focus       String
  abteilungId String
  Abteilung   Abteilung @relation(fields: [abteilungId], references: [id])

  @@index([abteilungId], map: "Mitarbeiter_abteilungId_fkey")
}

model Partner {
  id    String @id
  name  String
  link  String
  image String
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
