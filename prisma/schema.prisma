// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? @db.Text
    access_token             String? @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    admin         Boolean   @default(false)
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Anschprechpartner {
    id            String       @id @default(cuid())
    Name          String
    Telefon       String?
    Mobil         String?
    Mail          String?
    lieferantenId String?
    Lieferanten   Lieferanten? @relation(fields: [lieferantenId], references: [id], onDelete: Cascade)

    @@index([lieferantenId], map: "Anschprechpartner_lieferantenId_fkey")
}

model Einkauf {
    id            String      @id @default(cuid())
    Paypal        Boolean
    Abonniert     Boolean
    Geld          String?
    Pfand         String?
    Dinge         String?     @db.LongText
    mitarbeiterId String      @unique
    Abgeschickt   DateTime?
    Bild1         String?
    Bild2         String?
    Bild3         String?
    Bild1Date     DateTime?
    Bild2Date     DateTime?
    Bild3Date     DateTime?
    Mitarbeiter   Mitarbeiter @relation(fields: [mitarbeiterId], references: [id])
}

model Lieferanten {
    id                String              @id @default(cuid())
    Firma             String
    Kundennummer      String?
    Webseite          String?
    Anschprechpartner Anschprechpartner[]
}

model Mitarbeiter {
    id                 String    @id @unique @default(cuid())
    Name               String
    Short              String?
    Gruppenwahl        String?
    InternTelefon1     String?
    InternTelefon2     String?
    FestnetzAlternativ String?
    FestnetzPrivat     String?
    HomeOffice         String?
    MobilBusiness      String?
    MobilPrivat        String?
    Email              String?
    Azubi              Boolean?
    Geburtstag         DateTime?
    Einkauf            Einkauf?
}

model Warenlieferung {
    id            Int       @id
    Name          String
    angelegt      DateTime  @default(now())
    geliefert     DateTime?
    AlterPreis    Decimal?  @default(0.000000000000000000000000000000)
    NeuerPreis    Decimal?  @default(0.000000000000000000000000000000)
    Preis         DateTime?
    Artikelnummer String
}

model pdfs {
    id    Int    @id @default(autoincrement())
    title String @db.VarChar(255)
    body  String @db.Text

    @@fulltext([title, body])
}

model shorts {
    id     Int     @id @default(autoincrement())
    origin String  @db.VarChar(500)
    short  String  @unique(map: "short") @db.VarChar(255)
    count  Int?
    user   String? @db.VarChar(255)
}

model Aussteller {
    id            Int     @id @default(autoincrement())
    Artikelnummer String  @db.VarChar(255)
    Artikelname   String  @db.VarChar(255)
    Specs         String  @db.Text()
    Preis         Decimal @db.Decimal(10, 2)
    Bild          String? @db.Text()
}

model fischer {
    username String @id @db.VarChar(255)
    password String @db.Text()
    count    Int
}
